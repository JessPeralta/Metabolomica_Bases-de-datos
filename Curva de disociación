title: "Curvas de disociación RT-qPCR"
author: "Jessica Peralta"
date: "2025-05-08"
output:
  pdf_document: default
  html_document: default
  word_document: default
---
Correr la paqueteria

Instalación de paquetes

```{r}
if(!require(pacman))
  install.packages("pacman")

```
```{r}
library("pacman")
```

```{r}
p_load("vroom",
       "dplyr",
       "ggplot2",
       "tidyr",
       "ggrepel",
       "plotly")
```
Llamar a la base de datos

```{r}
Melting_curves <- vroom(file = "https://raw.githubusercontent.com/ManuelLaraMVZ/resultados_PCR_practica/refs/heads/main/Disoci_ejemplo1.csv")

Melting_curves
```
Modificar la bases de datos

```{r}
Melting_curves2 <- Melting_curves %>% 
  mutate(Temperatura = Temperature, DDR = A1, JRWF = B1, PPOF = C1, MLL = D1, H20 = E1) %>% 
  select(-Temperature: - E1)

Melting_curves2
```
Agrupación de datos

```{r}
Melting_curves3 <- Melting_curves2 %>% 
  pivot_longer(cols = -Temperatura,
               names_to = "Muestras",
               values_to = "Fluorescencias")
Melting_curves3
```

Gráfica

```{r}
Grafica_melting <- ggplot(Melting_curves3,
                          aes (x = Temperatura,
                               y = Fluorescencias,
                               color = Muestras)) +
  geom_line(linewidth = 1.5)+
  theme_classic(  )+
  labs(title = "Curvas de la derivada de disociación",
       subtitle= "Todas las muestras",
       caption = "Diseño: Jessica Peralta",
       x = "Temperatura (º C)",
       y = expression (-Delta~F / Delta~T))+
  theme(axis.line = element_line (size = 1.2, color = "black"),
        axis.title = element_text (face = "bold"),
        axis.text = element_text (face = "bold"),
        legend.title = element_text (face = "bold"),
        legend.text = element_text(face = "bold"))+
  scale_x_continuous(breaks = seq(min(Melting_curves3$Temperatura),
                         max(Melting_curves3$Temperatura),
                         by = 2))
Grafica_melting
```
Derivadas de las curvas de disociación

```{r}
Derivadas <- Melting_curves2 %>% 
  mutate(across(DDR:H20, 
                ~ -c(NA, diff(.x)/diff(Melting_curves2$Temperatura)), .names = "d_{.col}")) %>% 
  select(-DDR: -H20) %>% 
  slice(-1)

Derivadas
```
Reordenar los datos 

```{r}
Derivadas2 <- Derivadas %>% 
  pivot_longer(cols = -Temperatura,
               names_to = "Muestras",
               values_to = "Derivadas")
Derivadas2
```
```{r}
Grafica_derivada <- ggplot(Derivadas2,
                           aes(x = Temperatura,
                                y = Derivadas,
                                color = Muestras))+
  geom_line(linewidth = 1.5)+
  theme_classic(  )+
  labs(title = "Curvas de la derivada de disociación",
       subtitle= "Todas las muestras",
       caption = "Diseño: Jessica Peralta",
       x = "Temperatura (º C)",
       y = expression (-Delta~F / Delta~T))+
  theme(axis.line = element_line (size = 1.2, color = "black"),
        axis.title = element_text (face = "bold"),
        axis.text = element_text (face = "bold"),
        legend.title = element_text (face = "bold"),
        legend.text = element_text(face = "bold"))+
  scale_x_continuous(breaks = seq(min(Derivadas2$Temperatura),
                         max(Derivadas2$Temperatura),
                         by = 2.5))

Grafica_derivada
```
Construir una grafica 3D
```{r}
Grafica_derivada_3d <- plot_ly (Derivadas2,
                                x = ~Temperatura,
                                y = ~Muestras,
                                z = ~Derivadas,
                                color = ~factor(Muestras),
                                type = "scatter3d",
                                mode = "lines",
                                line = list(width = 6)) %>% 
  layout(title = "Curvas de derivada en 3D",
         scene = list(
           xaxis = list(title = "Temperatura (ºC)"),
           yaxis = list(title = "Muestras"),
           zaxis = list(title = "-ΔT/ΔF") #Aquí el cambio
         ))

Grafica_derivada_3d
```
Grafica del equipo

```{r}
Grafica_derivada_equipo <- ggplot(Derivadas,
                                  aes(x = Temperatura))+
  geom_line(aes(y = d_MLL, color = "d_MLL"), linewidth = 1.5) +
  geom_line(aes(y = d_H20,color = "d_H20"), linewidth = 1.5) +
  scale_color_manual(values = c ("d_MLL" = "#1e2f7c", "d_H20" = "#900C3F")) +
  theme_classic()+
  labs(title = "Derivada de Disociación",
       subtitle = "Tejido: Cerebro",
       caption = "Diseño: Jessica Peralta",
       x = "Temperatura",
       y = expression (-Delta~F / Delta~T))+
  theme(axis.line = element_line (size = 1.2, color = "black"),
        axis.title = element_text (face = "bold"),
        axis.text = element_text (face = "bold"),
        legend.title = element_text (face = "bold"),
        legend.text = element_text(face = "bold"))+
  scale_x_continuous(breaks = seq(min(Derivadas2$Temperatura),
                         max(Derivadas2$Temperatura),
                         by = 2.5))
Grafica_derivada_equipo
```
Etiquetas
```{r}
Pico <- max(Derivadas$d_MLL)
Pico
```
Temperatura
```{r}
Tm <- Derivadas %>% 
  filter(d_MLL == Pico) %>% 
  select(Temperatura, d_MLL)

Tm
```
Grafica con etiqueta
```{r}
Grafica_derivada_equipo2 <- Grafica_derivada_equipo+
  geom_vline(xintercept = Tm$Temperatura, 
             color = "#C70039", 
             linetype = "dashed",
             linewidth = 1)+
  geom_label_repel(data = Tm,
                   aes(x = Temperatura,
                       y = d_MLL,
                       label = paste("Tm = ",round(Temperatura), "º C")),
                   nudge_x = 4,
                   nudge_y = -0.03,
                   max.overlaps = 100,
                   color = "black",
                   fill = "#9eaffa")
Grafica_derivada_equipo2
```
